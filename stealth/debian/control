Source: stealth
Section: admin
Priority: optional
Maintainer: Frank B. Brokken <f.b.brokken@rug.nl>
Uploaders: George Danchev <danchev@spnet.net>
Build-Depends: debhelper (>> 4.0.0), libbobcat1-dev (>= 1.9.0), 
               icmake (>= 6.22-7), yodl (>= 2.01.03), 
               g++ (>= 4.0.0), tetex-extra, gs | gs-gpl
Standards-Version: 3.7.2

Package: stealth
Architecture: any
Depends: ${shlibs:Depends}
Description: A stealthy File Integrity Checker
 The STEALTH program performs File Integrity Checks on (remote) clients. It
 differs from other File Integrity Checkers by not requiring baseline
 integrity data to be kept on either write-only media or in the client's file
 system. In fact, client's will contain hardly any indication at all that they
 are being monitored, thus improving the stealthiness of the integrity scans.
 .
 STEALTH uses standard available software to perform file integrity checks
 (like find(1) and md5sum(1)). Using individualized policy files, it is highly
 adaptable to the specific requirements of its clients.
 .
 In production environments STEALTH should be run from an isolated computer
 (called the `STEALTH monitor').  In optimal configurations the STEALTH
 monitor should be a computer not accepting incoming connections. The account
 used to connect to its clients does not have to be `root': usually
 read-access to the client's file system is enough to perform a full integrity
 check. Instead of using `root' a more restrictive administrative or 
 ordinary account might offer all requirements for the desired integrity
 check. 
 .
 STEALTH itself must communicate with the computers it should monitor. It is
 essential that this communication is secure, and STEALTH configurations will
 therefore normally specify SSH as the command-shell to use to connect to its
 clients. STEALTH may be configured so as to use but one SSH connection per
 client, even if integrity scans are to be performed repeatedly. Apart from
 this, the STEALTH monitor might be allowed to send e-mail to remote clients
 system's maintainers. 
 .
 STEALTH-runs itself may start randomly within specified intervals. The
 resulting unpredicability of STEALTH-runs further increases STEALTH's
 stealthiness.
 .
 STEALTH's acronym is expanded to `Ssh-based Trust Enforcement Acquired
 through a Locally Trusted Host': the client's trust is enforced, the locally
 trusted host is the STEALTH monitor.

