#include "stealth.h"

#include <unistd.h>
#include <sstream>
#include <thread>
#include <chrono>

#include <bobcat/mstream>
#include <bobcat/exception>
#include <bobcat/linearmap>
#include <bobcat/process>
#include <bobcat/ifdstream>
#include <bobcat/ofdstream>
#include <bobcat/localclientsocket>
#include <bobcat/localserversocket>

#include "../policyfile/policyfile.h"
#include "../integrityscanner/integrityscanner.h"
#include "../options/options.h"
#include "../msg/msg.h"
#include "../logunit/logunit.h"
#include "../util/util.h"

struct FatalBuffer: public std::streambuf
{
    Stealth &d_stealth;
    std::string d_msg;

    FatalBuffer(Stealth *obj);

    private:
        int overflow(int ch) override;
        int sync() override;
};

std::ostream &leave(std::ostream &out);

using namespace std;
using namespace FBB;
