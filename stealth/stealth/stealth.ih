#include "stealth.h"

#include <iostream>

//#include <string>
//#include <signal.h>
//#include <limits>
//
//#include <bobcat/arg>
//#include <bobcat/process>
#include <bobcat/mstream>
#include <bobcat/exception>
#include <bobcat/datetime>

//#include "../util/util.h"

#include "../lock/lock.h"
#include "../configsorter/configsorter.h"
#include "../integrityscanner/integrityscanner.h"
#include "../reporter/reporter.h"
#include "../options/options.h"

using namespace std;
using namespace FBB;

//inline void Stealth::wakeup() 
//{
//    s_selector.setAlarm(0);
//}

//inline bool Stealth::keepAlive()
//{
//    return s_keepAlive;
//}

//inline void Stealth::handleReplySignal(int signum)
//{
//    wakeup();
//}
//
