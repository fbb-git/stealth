    S() uses a policy file consisting of two sections, the second
section is optional, and starts at a line merely containing tt(%%).

Each policy file is uniquely associated with a host to be tested. Each host
may have multiple policy files, though. In that case, each policy file defines
its own set of checks to be performed.

    itemization(
    it() The policy file's first section consists of two sets of data: em(use
directives) (starting with the keyword bf(USE)) and em(commands). 

    it() The (optional) second section starts at a line merely containing
tt(%%). Following this separating line several long option specifications can
be entered (cf. section ref(OPTIONS)). Options
specified on the command-line take priority over options specified 
in the policy file. Although the tt(--reload) option reloads the policy file,
it will not change option values originally specified as command-line options.

This section may contain specifications of the tt(skip-files) and tt(log)
options.  Relative file locations specified for these options are interpreted
relative to the location of the policy file. E.g., if the policy file argument
is specified as tt(/root/client/policy) then the specification tt(log:
client.log) results in s() writing its logs into the file
tt(/root/client/client.log).
    )


    The policy file's first section consists of three sets of data: em(define
directives) (starting with the keyword bf(DEFINE)), em(use directives)
(starting with the keyword bf(USE)) and em(commands).

Directives are written in capitals, and should appear exactly as written
below.

    Blank lines and information beyond hash-marks (#) are ignored, while lines
following lines terminating in backslashes (\ ) will be concatenated (em(en
passant) removing these backslashes). Leading white space on lines of the
policy file is ignored.


