Some files or directories may not require integrity checks. Automated
processes may modify files which are not threatening the proper functioning of
running programs or processes. In those cases a file can be prepared holding
the absolute paths of entries to be skipped. Each entry should appear on a
line of its own without any additional information.

S() can be informed about this file using the tt(--skip-files <file-spec>)
option. When a relative file specification is used with tt(--skip-files) it is
interpreted a location relative to the current working directory.  The
skip-files file itself must contain the paths of the entries to be skipped
during file integrity scans. If an entry is already present in a log file then
s() once generates an tt(IGNORING) message in the mail sent to the address
specified at tt(EMAIL) in the policy file. Each entry in a skip-file must be
on a line of its own and must be specified using absolute file paths. Entries
ending in a slash are assumed to be directories whose full contents must be
skipped. Other entries are interpreted as the names of files to skip. Initial
and trailing blanks, empty lines and lines having a tt(#) as their 1st non
blank character are ignored.

Here is an example:
        verb(
    stealth -e --skip-files /root/stealth/remote/skipping remote.pol)

If an entry tt(/etc/skipme) appears in the current logs which is thereafter
added to the tt(skippath) file then the mail generated by s() 
once contains a line like the following:
        verb(    SKIPPING: /etc/skipme
        > a7695bb2d019e60988e757a4b692acfe  /etc/skipme
        )
    The reported hash-value is the hash-value at the time of the stealth-run
reporting the tt(SKIPPING) message.

Entries ending in a slash are assumed to be directories whose contents must
(recursively) be skipped.
