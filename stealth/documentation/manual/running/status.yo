    Whenever s() is run and it encounters a modified situation the
already existing status file that is used to summarize that particular
situation is saved and a new status file is created. Eventually, this will
result in many status files. While report files can be rotated, it is
pointless to rotate old status files, since they never are modified. Instead
status files exceeding a certain age could be removed and more recent files
might be zipped to conserve space. In s()'s binary distribution the
file tt(/usr/share/doc/stealth/usr/bin/stealthcleanup) is provided which can
be used to perform this cleanup. The script expects one argument: a resource
file defining the following shell variables:
    itemization(
    it() tt(directories): the directories below which the status files are
        found;
    it() tt(gzdays): the number of days a status file must exist before it is
        compressed using bf(gzip)(1);
    it() tt(rmdays): the maximum age (in days) of compressed status
        files. Files exceeding this age are removed using bf(rm)(1).
    )
    Here is the tt(stealthcleanup) script as it is found in the binary distribution's
tt(/usr/share/doc/stealth/usr/bin) directory:
        verbinclude(../../../share/usr/bin/stealthcleanup)
    Assuming that the status files are written in
tt(/var/stealth/target/local) and tt(/var/stealth/target/remote); that status
file should be compressed when older than 2 days and removed after 30 days,
the resource file is:
        verbinclude(../../../share/etc/stealth/cleanup.rc)
    Furthermore assuming that the resourcefile is installed in
tt(/etc/stealth/cleanup.rc) and the tt(stealthcleanup) script itself in
tt(/usr/bin/stealthcleanup), the tt(stealthcleanup) script could be called
as follows:
        verb(
    /usr/bin/stealthcleanup /etc/stealth/cleanup.rc
        )
    Note that tt(stealthcleanup) may be called whether or not there are active
s() processes, as s() does not use status files anymore once
they have been written.
