#include "arg.h"

#ifndef _INCLUDED_ERRNO_H_
#include "../errno/errno.h"
#endif

#ifndef _SYSINC_IOSTREAM_
#include <iostream>
#define _SYSINC_IOSTREAM_
#endif

namespace FBB
{
    class OptStructArray
    {
        typedef struct option  OptStruct;

        unsigned    d_n;
        OptStruct *d_opt;
        
        public:
            OptStructArray(unsigned n)
            :
                d_n(n),
                d_opt(new OptStruct[n])
            {}

            ~OptStructArray()
            {
                delete [] d_opt;
            }

            OptStruct *get()
            {
                return d_opt;
            }
    };

    template <typename Type>
    class FirstCompare
    {
        Type d_value;
        public:
            FirstCompare(Type const &value)
            :
                d_value(value)
            {}
            bool operator()(std::pair<Type, std::string> const &el) const
            {
                return el.first == d_value;
            }
    };
}

using namespace FBB;
using namespace std;
